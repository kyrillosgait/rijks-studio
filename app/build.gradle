plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'rijksstudio-test-convention'
    id 'rijksstudio-spotless-convention'
}

android {
    namespace 'com.kyrillosg.rijksstudio'
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        applicationId "com.kyrillosg.rijksstudio"
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()

        int versionMajor = libs.versions.versionMajor.get().toInteger()
        int versionMinor = libs.versions.versionMinor.get().toInteger()
        int versionPatch = libs.versions.versionPatch.get().toInteger()

        versionName "$versionMajor.$versionMinor.$versionPatch"
        versionCode versionMajor * 1_000 + versionMinor * 100 + versionPatch

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        def properties = new Properties()
        rootProject.file("local.properties").withInputStream { properties.load(it) }
        def fallback = "\"APP_CENTER_SECRET_NOT_DEFINED\""

        debug {
            buildConfigField "String", "APP_CENTER_SECRET", properties.getProperty("APP_CENTER_SECRET_DEBUG") ?: fallback
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "APP_CENTER_SECRET", properties.getProperty("APP_CENTER_SECRET_RELEASE") ?: fallback
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation(project(":core:di"))
    implementation(project(":feature:collection"))

    implementation(libs.bundles.kotlinx.coroutines)
    implementation(libs.koin.android)

    implementation(libs.androidx.constraintlayout)
    implementation(libs.androidx.navigation.fragment.ktx)
    implementation(libs.androidx.navigation.ui.ktx)

    implementation(libs.appcenter.analytics)
    implementation(libs.appcenter.crashes)
    implementation(libs.material)
    implementation(libs.napier)

    testImplementation(libs.junit5.api)
    testRuntimeOnly(libs.junit5.engine)
    testImplementation(libs.bundles.ktor)
    testImplementation(libs.koin.test.junit5)
    androidTestImplementation(libs.androidx.test.ext.junit)
    androidTestImplementation(libs.androidx.test.espresso.core)
}