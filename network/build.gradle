plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'de.mannodermaus.android-junit5'
}

android {
    namespace 'com.kyrillosg.rijksstudio.network'
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        def properties = new Properties()
        rootProject.file("local.properties").withInputStream { properties.load(it) }
        def key = properties.getProperty("API_KEY") ?: "\"DEFINE_YOUR_API_KEY_IN_LOCAL_PROPERTIES\""

        debug {
            buildConfigField "String", "API_KEY", key
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "API_KEY", key
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
    sourceSets {
        test {
            resources.srcDirs += ['src/test/resources']
        }
    }
}

junitPlatform {
    configurationParameter("junit.jupiter.testinstance.lifecycle.default", "per_class")
}

dependencies {
    implementation(project(":core"))

    implementation(libs.bundles.kotlinx.coroutines)
    implementation(libs.bundles.koin)
    implementation(libs.bundles.ktor)
    implementation(libs.kotlinx.serialization.json)

    debugImplementation(libs.chucker.debug)
    releaseImplementation(libs.chucker.release)
    implementation(libs.napier)

    testImplementation(libs.junit5.api)
    testRuntimeOnly(libs.junit5.engine)
}